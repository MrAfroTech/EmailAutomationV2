{"ast":null,"code":"var _jsxFileName = \"/Users/missioncontrol/emailAutomationV2/dashboard/src/components/SubscriberList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SubscriberList = ({\n  supabase\n}) => {\n  _s();\n  const [subscribers, setSubscribers] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const fetchSubscribers = async () => {\n      try {\n        setIsLoading(true);\n        const {\n          data,\n          error\n        } = await supabase.from('EmailCampaignClients').select('*').order('created_at', {\n          ascending: false\n        });\n        if (error) throw error;\n        setSubscribers(data || []);\n      } catch (error) {\n        console.error('Error fetching subscribers:', error);\n        setError('Failed to load subscribers. Please try again.');\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchSubscribers();\n  }, [supabase]);\n  if (isLoading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading subscribers...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 25\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"error-message\",\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"subscriber-list-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Subscribers\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"subscriber-table-container\",\n      children: subscribers.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No subscribers yet.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"subscriber-table\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Joined\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Status\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: subscribers.map(subscriber => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: subscriber.email\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: subscriber.name || 'N/A'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: new Date(subscriber.created_at).toLocaleDateString()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: subscriber.status || 'Active'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 19\n            }, this)]\n          }, subscriber.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n_s(SubscriberList, \"4SXHRbe+1MhP7XEUyCksbz9Bfc0=\");\n_c = SubscriberList;\nexport default SubscriberList;\nvar _c;\n$RefreshReg$(_c, \"SubscriberList\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","SubscriberList","supabase","_s","subscribers","setSubscribers","isLoading","setIsLoading","error","setError","fetchSubscribers","data","from","select","order","ascending","console","children","fileName","_jsxFileName","lineNumber","columnNumber","className","length","map","subscriber","email","name","Date","created_at","toLocaleDateString","status","id","_c","$RefreshReg$"],"sources":["/Users/missioncontrol/emailAutomationV2/dashboard/src/components/SubscriberList.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nconst SubscriberList = ({ supabase }) => {\n  const [subscribers, setSubscribers] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const fetchSubscribers = async () => {\n      try {\n        setIsLoading(true);\n        const { data, error } = await supabase\n          .from('EmailCampaignClients')\n          .select('*')\n          .order('created_at', { ascending: false });\n\n        if (error) throw error;\n        setSubscribers(data || []);\n      } catch (error) {\n        console.error('Error fetching subscribers:', error);\n        setError('Failed to load subscribers. Please try again.');\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    fetchSubscribers();\n  }, [supabase]);\n\n  if (isLoading) return <div>Loading subscribers...</div>;\n  if (error) return <div className=\"error-message\">{error}</div>;\n\n  return (\n    <div className=\"subscriber-list-container\">\n      <h1>Subscribers</h1>\n      <div className=\"subscriber-table-container\">\n        {subscribers.length === 0 ? (\n          <p>No subscribers yet.</p>\n        ) : (\n          <table className=\"subscriber-table\">\n            <thead>\n              <tr>\n                <th>Email</th>\n                <th>Name</th>\n                <th>Joined</th>\n                <th>Status</th>\n              </tr>\n            </thead>\n            <tbody>\n              {subscribers.map((subscriber) => (\n                <tr key={subscriber.id}>\n                  <td>{subscriber.email}</td>\n                  <td>{subscriber.name || 'N/A'}</td>\n                  <td>{new Date(subscriber.created_at).toLocaleDateString()}</td>\n                  <td>{subscriber.status || 'Active'}</td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default SubscriberList;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}